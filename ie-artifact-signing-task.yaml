apiVersion: tekton.dev/v1alpha1
kind: Task
metadata:
  name: ie-artifact-signing-task
spec:
  inputs:
    resources:
    - name: cicd
      type: git
    params:
    - name: source-branch
      type: string
      description: Branch for stage environment on the git repository
    - name: dest-branch
      type: string
      description: Branch for stage environment on the git repository
    - name: signer-email
      type: string 
      description:  email of the artifacts signer 
    - name: git-repo-url
      type: string
      description:  git repo url "e.g. https://github.com/gajananan/logdna"
    - name: git-repo-user-email
      type: string
    - name: git-repo-user-name
      type: string
    - name: ignore-attrs
      type: string 
  volumes:
    - name: secring-secret-volume
      secret:
        secretName: pipeline-keyring-secret
    - name: prestage
      emptyDir: {}
  steps:
    - name: clone-staging-release
      image: quay.io/gajananan/gitops-sign-artifact:rc1
      imagePullPolicy: Always
      workingdir: /workspace/cicd
      script: |
        #!/bin/bash 
        rspfile="rsp.yaml"
        rsfile="rs.yaml"

        echo ""
        echo "---------------------------------------------------------"
        echo "Clone artifacts $(params.source-branch) branch"
        git fetch all
        git checkout $(params.source-branch)
        git pull origin $(params.source-branch)
        echo ""
        echo "---------------------------------------------------------"
        echo "Current git branch: $(git rev-parse --abbrev-ref HEAD)"
        #pwd
        #ls
        echo ""
        echo done
 
        echo ""
        echo "---------------------------------------------------------"
        echo "Check updated image name"
        cat deployment.yaml | yq r - -j | jq -r '.spec.template.spec.containers' | jq -r '.[].image'
        echo ""
        echo done
 
        echo ""
        echo "---------------------------------------------------------"
        echo "Check content of kustomization.yaml"
        cat kustomization.yaml
        echo done

        echo ""
        echo "---------------------------------------------------------"  
        echo "Remove IShield resources from  kustomization.yaml "
        yq d -i kustomization.yaml 'resources.[$rspfile]'
        yq d -i kustomization.yaml 'resources.[$rsfile]'
        echo ""
        echo done
        echo ""
        echo "---------------------------------------------------------"
        echo "Compose using kustomize after removing IShield resources"
        kustomize build  > merged.yaml
        echo ""
        echo "Content of merged.yaml"
        cat merged.yaml
        echo ""
        echo "done"

        echo ""
        echo "---------------------------------------------------------"
        echo "Add argocd wave annotation"
        cat namespace.yaml | yq r - -j | jq -r '.metadata.annotations."argocd.argoproj.io/sync-wave"="-4"' | yq r - --prettyPrint >> copy-namespace.yaml
        mv copy-namespace.yaml namespace.yaml
        cat namespace.yaml
        echo done               

        echo ""
        echo "---------------------------------------------------------"
        echo "Remove old RSP"
        if [ -f rsp-merged.yaml ]; then
           rm rsp-merged.yaml
        fi
        echo ""
        echo done

        echo ""
        echo "---------------------------------------------------------"
        echo "Generate RSP <script> <inputfile> <IGNORE_ATTR>"
        echo ignore-attrs: $(params.ignore-attrs)
        /generate_rsp.sh merged.yaml $(params.ignore-attrs)
        echo ""
        echo done
        echo """
        echo "---------------------------------------------------------"
        echo "Check generated RSP"
        cat rsp-merged.yaml
        echo "---------------------------------------------------------" 
        echo "done"  
    - name: sign-artifacts
      image: quay.io/gajananan/gitops-sign-artifact:rc1
      imagePullPolicy: Always
      volumeMounts:
        - mountPath: /secrets/
          name: secring-secret-volume
      workingdir: /workspace/cicd
      script: |
        #!/bin/bash

        mergedrscfile="merged.yaml"
        mergedrsigrscfile="rsig-merged.yaml"
        echo ""
        echo "---------------------------------------------------------"
        echo "Retrive keyring-secret"       
        cat /secrets/secring.gpg > /tmp/tmp-secring.gpg
        echo "---------------------------------------------------------"
        echo ""
        echo done

        echo ""
        echo "---------------------------------------------------------"
        echo "Prepare GPG keys"
        echo ""
        echo "Import keys"
        gpg --import /tmp/tmp-secring.gpg

        echo ""
        echo "List secret keys"
        gpg --list-secret-keys

        echo ""
        echo "List keys"
        gpg --list-keys

        echo "---------------------------------------------------------"
        echo done
        
        echo ""
        echo "---------------------------------------------------------"        
        echo "Signer"
        signer=$(params.signer-email)
        echo signer: $signer        
        echo ""
        echo done
  

        if [ -f  $mergedrscfile ]; then
           /gpg-rs-sign.sh $signer $mergedrscfile $mergedrsigrscfile

        fi
